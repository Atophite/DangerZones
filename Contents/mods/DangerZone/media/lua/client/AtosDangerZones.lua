---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Atophite.
--- DateTime: 04/10/2022 19:23
---
---

if isServer() and not isClient() then
	return
end

local ATOS_player = getPlayer()

local ATOS_sound = nil
--Is radiation detected by the geiger teller
local ATOS_isRadiationDetected = false
local ATOS_isInZone = false
local ATOS_isProtected = false
local ATOS_sickness = 1
local ATOS_hasGeiger = false
local ATOS_hasEnteredZone = false

local ATOS_zones

local Client = AtosDangerZones.Client
local Shared = AtosDangerZones.Shared

local function ATOS_onGameStart()
	ATOS_player = getPlayer()

	--if client is online send request to server
	if isClient() then
		print("requesting zones")
		sendClientCommand("Atos", "RequestAllZones", {
			player = ATOS_player
		});
	else
		--If client is offline, manually read the file
		ATOS_zones = Shared.ATOS_readZonesFile()
	end

end

local function testCommand()
	--ATOS_zones = ATOS_readCorsFile()
	print(isClient())
	sendClientCommand("Atos", "RequestAllZones", {
		player = ATOS_player
	});
end

local function ATOS_onConnected()
	print("Connected to server")
end

local function OnGameBoot()
	print("game is booted!")
end

local function ATOS_everyOneMinute()
	--If zones are empty
	--sendClientCommand only works on multiplayer
	--For some reason the sendClientCommand doesnt work on onGameStart()
	if ATOS_zones == nil then
		if(isClient()) then
			sendClientCommand("Atos", "RequestAllZones", {
				player = ATOS_player
			});
		else
			ATOS_zones = Shared.ATOS_readZonesFile()
		end
	else
		Client.ATOS_loopZones()
	end
end


function Client.ATOS_onClothingUpdated()

	--https://zomboid-javadoc.com/41.65/zombie/characters/ILuaGameCharacterClothing.html

	--getModID
	--Check if player equipped a geiger when clothing is updated
	--Also checks if the player already has the geiger equipped.
	if Client.ATOS_isGeigerEquipped(ATOS_player) and not ATOS_hasGeiger then
		ATOS_hasGeiger = true

		if not ATOS_isInZone then
			ATOS_player:Say("Radiation not detected!")
		elseif ATOS_isInZone then
			ATOS_player:Say("Radiation detected!")
		end

	elseif not Client.ATOS_isGeigerEquipped(ATOS_player) then
		ATOS_hasGeiger = false
	end

	if Client.ATOS_isPlayerProtected(ATOS_player) then
		ATOS_isProtected = true
	else
		ATOS_isProtected = false
	end
end


function Client.ATOS_loopZones()
	local playerX = ATOS_player:getLx()
	local playerY = ATOS_player:getLy()
	local isInZone = false

	--Check if ATOS_player is in the zone
	--zone[1][1] is lowest x coordinate and zone[1][2] is highest.
	--Same with y coordinate
	for i, zone in ipairs(ATOS_zones) do
		if(playerX > zone[1][1] and playerX < zone[1][2] and playerY > zone[2][1] and playerY < zone[2][2]) then
			isInZone = true
		end
	end
	if isInZone then
		ATOS_isInZone = true
	else
		ATOS_isInZone = false
	end
	Client.ATOS_validateZone()
end


function Client.ATOS_validateZone()

	-- Check if the player is in the radiation zone
	if ATOS_isInZone then

		--Check if its the first time that the ATOS_player has entered the zone.
		--To prevent a loop
		if not ATOS_hasEnteredZone then

			if ATOS_hasGeiger then
				ATOS_player:Say("Radiation detected!")
			end
			ATOS_hasEnteredZone = true
			Client.ATOS_onClothingUpdated()
		end


		if ATOS_isProtected then
			print("player is wearing protection")
		else
			print("player is NOT wearing protection")
			ATOS_sickness = ATOS_sickness * 1.2
			if(ATOS_sickness >= 100) then
				print(ATOS_sickness)
				ATOS_player:getBodyDamage():setFoodSicknessLevel(20);
			elseif ATOS_sickness >= 200 then
				ATOS_player:getBodyDamage():setFoodSicknessLevel(40);
			end

		end

		--If the ATOS_player has a geiger the ATOS_player can detect the radiation
		if ATOS_hasGeiger then
			ATOS_isRadiationDetected = true
			Client.ATOS_playSound()
		else
			ATOS_isRadiationDetected = false
			Client.ATOS_stopSound()
		end
	else
		--Check if its the first time that the player has left the zone.
		--To prevent a loop
		if ATOS_hasEnteredZone then
			Client.ATOS_stopSound()
			--Send message to server that player left zone.
			if ATOS_hasGeiger then
				ATOS_player:Say("Radiation not detected!")
			end

			ATOS_hasEnteredZone = false
		end
	end
end

function Client.ATOS_playSound()
	if ATOS_sound == nil then
		ATOS_sound = ATOS_player:playSound("Geiger")

	elseif ATOS_sound ~= nil and not ATOS_player:getEmitter():isPlaying(ATOS_sound) and ATOS_hasGeiger == true then
		ATOS_sound = ATOS_player:playSound("Geiger")
	end
end

function Client.ATOS_stopSound()
	if ATOS_sound ~= nil and ATOS_isRadiationDetected or not ATOS_hasGeiger then
		ATOS_player:getEmitter():stopSoundByName("Geiger")

		ATOS_sound = nil
	end
end

function Client.ATOS_setZones(zones)
	ATOS_zones = zones
end

Events.OnClothingUpdated.Add(Client.ATOS_onClothingUpdated)
Events.OnGameStart.Add(ATOS_onGameStart)
Events.EveryOneMinute.Add(ATOS_everyOneMinute)
Events.OnConnected.Add(ATOS_onConnected)
Events.OnGameBoot.Add(OnGameBoot)


